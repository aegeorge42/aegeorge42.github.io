{"version":3,"sources":["../src/deprecation.js"],"names":["deprecation","warnings","warn","msg","stack","Error","console","split","splice","join","groupCollapsed","groupEnd","core","mesh","particles","extras","filters","prepare","loaders","interaction","Object","defineProperties","SpriteBatch","get","ReferenceError","AssetLoader","Stage","Container","DisplayObjectContainer","Strip","Mesh","Rope","ParticleContainer","MovieClip","AnimatedSprite","TilingSprite","BitmapText","blendModes","BLEND_MODES","scaleModes","SCALE_MODES","BaseTextureCache","utils","TextureCache","math","AbstractFilter","Filter","TransformManual","TransformBase","TARGET_FPMS","settings","set","value","FILTER_RESOLUTION","RESOLUTION","MIPMAP_TEXTURES","SPRITE_BATCH_SIZE","SPRITE_MAX_TEXTURES","RETINA_PREFIX","DEFAULT_RENDER_OPTIONS","RENDER_OPTIONS","defaults","parent","target","i","defineProperty","length","PRECISION","PRECISION_FRAGMENT","TextureTransform","TextureMatrix","DisplayObject","prototype","generateTexture","renderer","scaleMode","resolution","Graphics","generateCanvasTexture","GroupD8","isSwapWidthHeight","rotation","isVertical","RenderTexture","render","displayObject","matrix","clear","updateTransform","legacyRenderer","getImage","extract","image","getBase64","base64","getCanvas","canvas","getPixels","pixels","Sprite","setTexture","texture","setText","text","Text","calculateFontProperties","font","TextMetrics","measureFont","fontPropertiesCache","_fonts","fontPropertiesCanvas","_canvas","fontPropertiesContext","_context","setStyle","style","determineFontProperties","fontStyle","getFontStyle","TextStyle","toFontString","fontSizeString","_fontSize","_fontStyle","_fontVariant","_fontWeight","_fontFamily","indexOf","splits","fontSizeIndex","match","slice","styleID","Texture","setFrame","frame","addTextureToCache","id","addToCache","removeTextureFromCache","BaseTexture","removeFromCache","SpriteMaskFilter","VoidFilter","AlphaFilter","uuid","uid","canUseNewCanvasBlendModes","CanvasTinter","canUseMultiply","saidHello","bool","skipHello","BasePrepare","register","addHook","uploadHook","registerFindHook","registerUploadHook","NaN","webgl","Loader","Resource","isJson","type","TYPE","JSON","isXml","XML","isImage","IMAGE","isAudio","AUDIO","isVideo","VIDEO","before","pre","after","use","interactiveTarget","cursor","InteractionManager","cursorStyles","default","currentCursorMode"],"mappings":"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","file":"deprecation.js","sourcesContent":["// provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\n\n// A map of warning messages already fired\nconst warnings = {};\n\n// provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\nfunction warn(msg)\n{\n    // Ignore duplicat\n    if (warnings[msg])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('Deprecation Warning: ', msg);\n    }\n    else\n    {\n        // chop off the stack trace which includes pixi.js internal calls\n        stack = stack.split('\\n').splice(3).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cDeprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                msg\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('Deprecation Warning: ', msg);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[msg] = true;\n}\n\nexport default function deprecation(core)\n{\n    const { mesh, particles, extras, filters, prepare, loaders, interaction } = core;\n\n    Object.defineProperties(core, {\n\n        /**\n         * @class\n         * @private\n         * @name SpriteBatch\n         * @memberof PIXI\n         * @see PIXI.ParticleContainer\n         * @throws {ReferenceError} SpriteBatch does not exist any more, please use the new ParticleContainer instead.\n         * @deprecated since version 3.0.0\n         */\n        SpriteBatch: {\n            get()\n            {\n                throw new ReferenceError('SpriteBatch does not exist any more, '\n                    + 'please use the new ParticleContainer instead.');\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name AssetLoader\n         * @memberof PIXI\n         * @see PIXI.loaders.Loader\n         * @throws {ReferenceError} The loader system was overhauled in PixiJS v3,\n         * please see the new PIXI.loaders.Loader class.\n         * @deprecated since version 3.0.0\n         */\n        AssetLoader: {\n            get()\n            {\n                throw new ReferenceError('The loader system was overhauled in PixiJS v3, '\n                    + 'please see the new PIXI.loaders.Loader class.');\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name Stage\n         * @memberof PIXI\n         * @see PIXI.Container\n         * @deprecated since version 3.0.0\n         */\n        Stage: {\n            get()\n            {\n                warn('You do not need to use a PIXI Stage any more, you can simply render any container.');\n\n                return core.Container;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name DisplayObjectContainer\n         * @memberof PIXI\n         * @see PIXI.Container\n         * @deprecated since version 3.0.0\n         */\n        DisplayObjectContainer: {\n            get()\n            {\n                warn('DisplayObjectContainer has been shortened to Container, please use Container from now on.');\n\n                return core.Container;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name Strip\n         * @memberof PIXI\n         * @see PIXI.mesh.Mesh\n         * @deprecated since version 3.0.0\n         */\n        Strip: {\n            get()\n            {\n                warn('The Strip class has been renamed to Mesh and moved to mesh.Mesh, please use mesh.Mesh from now on.');\n\n                return mesh.Mesh;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name Rope\n         * @memberof PIXI\n         * @see PIXI.mesh.Rope\n         * @deprecated since version 3.0.0\n         */\n        Rope: {\n            get()\n            {\n                warn('The Rope class has been moved to mesh.Rope, please use mesh.Rope from now on.');\n\n                return mesh.Rope;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name ParticleContainer\n         * @memberof PIXI\n         * @see PIXI.particles.ParticleContainer\n         * @deprecated since version 4.0.0\n         */\n        ParticleContainer: {\n            get()\n            {\n                warn('The ParticleContainer class has been moved to particles.ParticleContainer, '\n                    + 'please use particles.ParticleContainer from now on.');\n\n                return particles.ParticleContainer;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name MovieClip\n         * @memberof PIXI\n         * @see PIXI.extras.MovieClip\n         * @deprecated since version 3.0.0\n         */\n        MovieClip: {\n            get()\n            {\n                warn('The MovieClip class has been moved to extras.AnimatedSprite, please use extras.AnimatedSprite.');\n\n                return extras.AnimatedSprite;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name TilingSprite\n         * @memberof PIXI\n         * @see PIXI.extras.TilingSprite\n         * @deprecated since version 3.0.0\n         */\n        TilingSprite: {\n            get()\n            {\n                warn('The TilingSprite class has been moved to extras.TilingSprite, '\n                    + 'please use extras.TilingSprite from now on.');\n\n                return extras.TilingSprite;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name BitmapText\n         * @memberof PIXI\n         * @see PIXI.extras.BitmapText\n         * @deprecated since version 3.0.0\n         */\n        BitmapText: {\n            get()\n            {\n                warn('The BitmapText class has been moved to extras.BitmapText, '\n                    + 'please use extras.BitmapText from now on.');\n\n                return extras.BitmapText;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name blendModes\n         * @memberof PIXI\n         * @see PIXI.BLEND_MODES\n         * @deprecated since version 3.0.0\n         */\n        blendModes: {\n            get()\n            {\n                warn('The blendModes has been moved to BLEND_MODES, please use BLEND_MODES from now on.');\n\n                return core.BLEND_MODES;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name scaleModes\n         * @memberof PIXI\n         * @see PIXI.SCALE_MODES\n         * @deprecated since version 3.0.0\n         */\n        scaleModes: {\n            get()\n            {\n                warn('The scaleModes has been moved to SCALE_MODES, please use SCALE_MODES from now on.');\n\n                return core.SCALE_MODES;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name BaseTextureCache\n         * @memberof PIXI\n         * @see PIXI.utils.BaseTextureCache\n         * @deprecated since version 3.0.0\n         */\n        BaseTextureCache: {\n            get()\n            {\n                warn('The BaseTextureCache class has been moved to utils.BaseTextureCache, '\n                    + 'please use utils.BaseTextureCache from now on.');\n\n                return core.utils.BaseTextureCache;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name TextureCache\n         * @memberof PIXI\n         * @see PIXI.utils.TextureCache\n         * @deprecated since version 3.0.0\n         */\n        TextureCache: {\n            get()\n            {\n                warn('The TextureCache class has been moved to utils.TextureCache, '\n                    + 'please use utils.TextureCache from now on.');\n\n                return core.utils.TextureCache;\n            },\n        },\n\n        /**\n         * @namespace\n         * @private\n         * @name math\n         * @memberof PIXI\n         * @see PIXI\n         * @deprecated since version 3.0.6\n         */\n        math: {\n            get()\n            {\n                warn('The math namespace is deprecated, please access members already accessible on PIXI.');\n\n                return core;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.AbstractFilter\n         * @see PIXI.Filter\n         * @deprecated since version 3.0.6\n         */\n        AbstractFilter: {\n            get()\n            {\n                warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n\n                return core.Filter;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.TransformManual\n         * @see PIXI.TransformBase\n         * @deprecated since version 4.0.0\n         */\n        TransformManual: {\n            get()\n            {\n                warn('TransformManual has been renamed to TransformBase, please update your pixi-spine');\n\n                return core.TransformBase;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.TARGET_FPMS\n         * @see PIXI.settings.TARGET_FPMS\n         * @deprecated since version 4.2.0\n         */\n        TARGET_FPMS: {\n            get()\n            {\n                warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n\n                return core.settings.TARGET_FPMS;\n            },\n            set(value)\n            {\n                warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n\n                core.settings.TARGET_FPMS = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.FILTER_RESOLUTION\n         * @see PIXI.settings.FILTER_RESOLUTION\n         * @deprecated since version 4.2.0\n         */\n        FILTER_RESOLUTION: {\n            get()\n            {\n                warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n\n                return core.settings.FILTER_RESOLUTION;\n            },\n            set(value)\n            {\n                warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n\n                core.settings.FILTER_RESOLUTION = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.RESOLUTION\n         * @see PIXI.settings.RESOLUTION\n         * @deprecated since version 4.2.0\n         */\n        RESOLUTION: {\n            get()\n            {\n                warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n\n                return core.settings.RESOLUTION;\n            },\n            set(value)\n            {\n                warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n\n                core.settings.RESOLUTION = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.MIPMAP_TEXTURES\n         * @see PIXI.settings.MIPMAP_TEXTURES\n         * @deprecated since version 4.2.0\n         */\n        MIPMAP_TEXTURES: {\n            get()\n            {\n                warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n\n                return core.settings.MIPMAP_TEXTURES;\n            },\n            set(value)\n            {\n                warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n\n                core.settings.MIPMAP_TEXTURES = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.SPRITE_BATCH_SIZE\n         * @see PIXI.settings.SPRITE_BATCH_SIZE\n         * @deprecated since version 4.2.0\n         */\n        SPRITE_BATCH_SIZE: {\n            get()\n            {\n                warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n\n                return core.settings.SPRITE_BATCH_SIZE;\n            },\n            set(value)\n            {\n                warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n\n                core.settings.SPRITE_BATCH_SIZE = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.SPRITE_MAX_TEXTURES\n         * @see PIXI.settings.SPRITE_MAX_TEXTURES\n         * @deprecated since version 4.2.0\n         */\n        SPRITE_MAX_TEXTURES: {\n            get()\n            {\n                warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n\n                return core.settings.SPRITE_MAX_TEXTURES;\n            },\n            set(value)\n            {\n                warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n\n                core.settings.SPRITE_MAX_TEXTURES = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.RETINA_PREFIX\n         * @see PIXI.settings.RETINA_PREFIX\n         * @deprecated since version 4.2.0\n         */\n        RETINA_PREFIX: {\n            get()\n            {\n                warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n\n                return core.settings.RETINA_PREFIX;\n            },\n            set(value)\n            {\n                warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n\n                core.settings.RETINA_PREFIX = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.DEFAULT_RENDER_OPTIONS\n         * @see PIXI.settings.RENDER_OPTIONS\n         * @deprecated since version 4.2.0\n         */\n        DEFAULT_RENDER_OPTIONS: {\n            get()\n            {\n                warn('PIXI.DEFAULT_RENDER_OPTIONS has been deprecated, please use PIXI.settings.DEFAULT_RENDER_OPTIONS');\n\n                return core.settings.RENDER_OPTIONS;\n            },\n        },\n    });\n\n    // Move the default properties to settings\n    const defaults = [\n        { parent: 'TRANSFORM_MODE', target: 'TRANSFORM_MODE' },\n        { parent: 'GC_MODES', target: 'GC_MODE' },\n        { parent: 'WRAP_MODES', target: 'WRAP_MODE' },\n        { parent: 'SCALE_MODES', target: 'SCALE_MODE' },\n        { parent: 'PRECISION', target: 'PRECISION_FRAGMENT' },\n    ];\n\n    for (let i = 0; i < defaults.length; i++)\n    {\n        const deprecation = defaults[i];\n\n        Object.defineProperty(core[deprecation.parent], 'DEFAULT', {\n            get()\n            {\n                warn(`PIXI.${deprecation.parent}.DEFAULT has been deprecated, `\n                    + `please use PIXI.settings.${deprecation.target}`);\n\n                return core.settings[deprecation.target];\n            },\n            set(value)\n            {\n                warn(`PIXI.${deprecation.parent}.DEFAULT has been deprecated, `\n                    + `please use PIXI.settings.${deprecation.target}`);\n\n                core.settings[deprecation.target] = value;\n            },\n        });\n    }\n\n    Object.defineProperties(core.settings, {\n\n        /**\n         * @static\n         * @name PRECISION\n         * @memberof PIXI.settings\n         * @see PIXI.PRECISION\n         * @deprecated since version 4.4.0\n         */\n        PRECISION: {\n            get()\n            {\n                warn('PIXI.settings.PRECISION has been deprecated, please use PIXI.settings.PRECISION_FRAGMENT');\n\n                return core.settings.PRECISION_FRAGMENT;\n            },\n            set(value)\n            {\n                warn('PIXI.settings.PRECISION has been deprecated, please use PIXI.settings.PRECISION_FRAGMENT');\n\n                core.settings.PRECISION_FRAGMENT = value;\n            },\n        },\n    });\n\n    if (extras.AnimatedSprite)\n    {\n        Object.defineProperties(extras, {\n\n            /**\n             * @class\n             * @name MovieClip\n             * @memberof PIXI.extras\n             * @see PIXI.extras.AnimatedSprite\n             * @deprecated since version 4.2.0\n             */\n            MovieClip: {\n                get()\n                {\n                    warn('The MovieClip class has been renamed to AnimatedSprite, please use AnimatedSprite from now on.');\n\n                    return extras.AnimatedSprite;\n                },\n            },\n        });\n    }\n\n    if (extras)\n    {\n        Object.defineProperties(extras, {\n            /**\n             * @class\n             * @name TextureTransform\n             * @memberof PIXI.extras\n             * @see PIXI.TextureMatrix\n             * @deprecated since version 4.6.0\n             */\n            TextureTransform: {\n                get()\n                {\n                    warn('The TextureTransform class has been renamed to TextureMatrix, '\n                        + 'please use PIXI.TextureMatrix from now on.');\n\n                    return core.TextureMatrix;\n                },\n            },\n        });\n    }\n\n    core.DisplayObject.prototype.generateTexture = function generateTexture(renderer, scaleMode, resolution)\n    {\n        warn('generateTexture has moved to the renderer, please use renderer.generateTexture(displayObject)');\n\n        return renderer.generateTexture(this, scaleMode, resolution);\n    };\n\n    core.Graphics.prototype.generateTexture = function generateTexture(scaleMode, resolution)\n    {\n        warn('graphics generate texture has moved to the renderer. '\n            + 'Or to render a graphics to a texture using canvas please use generateCanvasTexture');\n\n        return this.generateCanvasTexture(scaleMode, resolution);\n    };\n\n    /**\n     * @method\n     * @name PIXI.GroupD8.isSwapWidthHeight\n     * @see PIXI.GroupD8.isVertical\n     * @param {number} rotation - The number to check.\n     * @returns {boolean} Whether or not the direction is vertical\n     * @deprecated since version 4.6.0\n     */\n    core.GroupD8.isSwapWidthHeight = function isSwapWidthHeight(rotation)\n    {\n        warn('GroupD8.isSwapWidthHeight was renamed to GroupD8.isVertical');\n\n        return core.GroupD8.isVertical(rotation);\n    };\n\n    core.RenderTexture.prototype.render = function render(displayObject, matrix, clear, updateTransform)\n    {\n        this.legacyRenderer.render(displayObject, this, clear, matrix, !updateTransform);\n        warn('RenderTexture.render is now deprecated, please use renderer.render(displayObject, renderTexture)');\n    };\n\n    core.RenderTexture.prototype.getImage = function getImage(target)\n    {\n        warn('RenderTexture.getImage is now deprecated, please use renderer.extract.image(target)');\n\n        return this.legacyRenderer.extract.image(target);\n    };\n\n    core.RenderTexture.prototype.getBase64 = function getBase64(target)\n    {\n        warn('RenderTexture.getBase64 is now deprecated, please use renderer.extract.base64(target)');\n\n        return this.legacyRenderer.extract.base64(target);\n    };\n\n    core.RenderTexture.prototype.getCanvas = function getCanvas(target)\n    {\n        warn('RenderTexture.getCanvas is now deprecated, please use renderer.extract.canvas(target)');\n\n        return this.legacyRenderer.extract.canvas(target);\n    };\n\n    core.RenderTexture.prototype.getPixels = function getPixels(target)\n    {\n        warn('RenderTexture.getPixels is now deprecated, please use renderer.extract.pixels(target)');\n\n        return this.legacyRenderer.pixels(target);\n    };\n\n    /**\n     * @method\n     * @private\n     * @name PIXI.Sprite#setTexture\n     * @see PIXI.Sprite#texture\n     * @deprecated since version 3.0.0\n     * @param {PIXI.Texture} texture - The texture to set to.\n     */\n    core.Sprite.prototype.setTexture = function setTexture(texture)\n    {\n        this.texture = texture;\n        warn('setTexture is now deprecated, please use the texture property, e.g : sprite.texture = texture;');\n    };\n\n    if (extras.BitmapText)\n    {\n        /**\n         * @method\n         * @name PIXI.extras.BitmapText#setText\n         * @see PIXI.extras.BitmapText#text\n         * @deprecated since version 3.0.0\n         * @param {string} text - The text to set to.\n         */\n        extras.BitmapText.prototype.setText = function setText(text)\n        {\n            this.text = text;\n            warn(`setText is now deprecated, please use the text property, e.g : myBitmapText.text = 'my text';`);\n        };\n    }\n\n    /**\n     * @method\n     * @name PIXI.Text#setText\n     * @see PIXI.Text#text\n     * @deprecated since version 3.0.0\n     * @param {string} text - The text to set to.\n     */\n    core.Text.prototype.setText = function setText(text)\n    {\n        this.text = text;\n        warn(`setText is now deprecated, please use the text property, e.g : myText.text = 'my text';`);\n    };\n\n    /**\n     * Calculates the ascent, descent and fontSize of a given fontStyle\n     *\n     * @name PIXI.Text.calculateFontProperties\n     * @see PIXI.TextMetrics.measureFont\n     * @deprecated since version 4.5.0\n     * @param {string} font - String representing the style of the font\n     * @return {Object} Font properties object\n     */\n    core.Text.calculateFontProperties = function calculateFontProperties(font)\n    {\n        warn(`Text.calculateFontProperties is now deprecated, please use the TextMetrics.measureFont`);\n\n        return core.TextMetrics.measureFont(font);\n    };\n\n    Object.defineProperties(core.Text, {\n        fontPropertiesCache: {\n            get()\n            {\n                warn(`Text.fontPropertiesCache is deprecated`);\n\n                return core.TextMetrics._fonts;\n            },\n        },\n        fontPropertiesCanvas: {\n            get()\n            {\n                warn(`Text.fontPropertiesCanvas is deprecated`);\n\n                return core.TextMetrics._canvas;\n            },\n        },\n        fontPropertiesContext: {\n            get()\n            {\n                warn(`Text.fontPropertiesContext is deprecated`);\n\n                return core.TextMetrics._context;\n            },\n        },\n    });\n\n    /**\n     * @method\n     * @name PIXI.Text#setStyle\n     * @see PIXI.Text#style\n     * @deprecated since version 3.0.0\n     * @param {*} style - The style to set to.\n     */\n    core.Text.prototype.setStyle = function setStyle(style)\n    {\n        this.style = style;\n        warn('setStyle is now deprecated, please use the style property, e.g : myText.style = style;');\n    };\n\n    /**\n     * @method\n     * @name PIXI.Text#determineFontProperties\n     * @see PIXI.Text#measureFontProperties\n     * @deprecated since version 4.2.0\n     * @private\n     * @param {string} fontStyle - String representing the style of the font\n     * @return {Object} Font properties object\n     */\n    core.Text.prototype.determineFontProperties = function determineFontProperties(fontStyle)\n    {\n        warn('determineFontProperties is now deprecated, please use TextMetrics.measureFont method');\n\n        return core.TextMetrics.measureFont(fontStyle);\n    };\n\n    /**\n     * @method\n     * @name PIXI.Text.getFontStyle\n     * @see PIXI.TextMetrics.getFontStyle\n     * @deprecated since version 4.5.0\n     * @param {PIXI.TextStyle} style - The style to use.\n     * @return {string} Font string\n     */\n    core.Text.getFontStyle = function getFontStyle(style)\n    {\n        warn('getFontStyle is now deprecated, please use TextStyle.toFontString() instead');\n\n        style = style || {};\n\n        if (!(style instanceof core.TextStyle))\n        {\n            style = new core.TextStyle(style);\n        }\n\n        return style.toFontString();\n    };\n\n    Object.defineProperties(core.TextStyle.prototype, {\n        /**\n         * Set all properties of a font as a single string\n         *\n         * @name PIXI.TextStyle#font\n         * @deprecated since version 4.0.0\n         */\n        font: {\n            get()\n            {\n                warn(`text style property 'font' is now deprecated, please use the `\n                    + `'fontFamily', 'fontSize', 'fontStyle', 'fontVariant' and 'fontWeight' properties from now on`);\n\n                const fontSizeString = (typeof this._fontSize === 'number') ? `${this._fontSize}px` : this._fontSize;\n\n                return `${this._fontStyle} ${this._fontVariant} ${this._fontWeight} ${fontSizeString} ${this._fontFamily}`;\n            },\n            set(font)\n            {\n                warn(`text style property 'font' is now deprecated, please use the `\n                    + `'fontFamily','fontSize',fontStyle','fontVariant' and 'fontWeight' properties from now on`);\n\n                // can work out fontStyle from search of whole string\n                if (font.indexOf('italic') > 1)\n                {\n                    this._fontStyle = 'italic';\n                }\n                else if (font.indexOf('oblique') > -1)\n                {\n                    this._fontStyle = 'oblique';\n                }\n                else\n                {\n                    this._fontStyle = 'normal';\n                }\n\n                // can work out fontVariant from search of whole string\n                if (font.indexOf('small-caps') > -1)\n                {\n                    this._fontVariant = 'small-caps';\n                }\n                else\n                {\n                    this._fontVariant = 'normal';\n                }\n\n                // fontWeight and fontFamily are tricker to find, but it's easier to find the fontSize due to it's units\n                const splits = font.split(' ');\n                let fontSizeIndex = -1;\n\n                this._fontSize = 26;\n                for (let i = 0; i < splits.length; ++i)\n                {\n                    if (splits[i].match(/(px|pt|em|%)/))\n                    {\n                        fontSizeIndex = i;\n                        this._fontSize = splits[i];\n                        break;\n                    }\n                }\n\n                // we can now search for fontWeight as we know it must occur before the fontSize\n                this._fontWeight = 'normal';\n                for (let i = 0; i < fontSizeIndex; ++i)\n                {\n                    if (splits[i].match(/(bold|bolder|lighter|100|200|300|400|500|600|700|800|900)/))\n                    {\n                        this._fontWeight = splits[i];\n                        break;\n                    }\n                }\n\n                // and finally join everything together after the fontSize in case the font family has multiple words\n                if (fontSizeIndex > -1 && fontSizeIndex < splits.length - 1)\n                {\n                    this._fontFamily = '';\n                    for (let i = fontSizeIndex + 1; i < splits.length; ++i)\n                    {\n                        this._fontFamily += `${splits[i]} `;\n                    }\n\n                    this._fontFamily = this._fontFamily.slice(0, -1);\n                }\n                else\n                {\n                    this._fontFamily = 'Arial';\n                }\n\n                this.styleID++;\n            },\n        },\n    });\n\n    /**\n     * @method\n     * @name PIXI.Texture#setFrame\n     * @see PIXI.Texture#setFrame\n     * @deprecated since version 3.0.0\n     * @param {PIXI.Rectangle} frame - The frame to set.\n     */\n    core.Texture.prototype.setFrame = function setFrame(frame)\n    {\n        this.frame = frame;\n        warn('setFrame is now deprecated, please use the frame property, e.g: myTexture.frame = frame;');\n    };\n\n    /**\n     * @static\n     * @function\n     * @name PIXI.Texture.addTextureToCache\n     * @see PIXI.Texture.addToCache\n     * @deprecated since 4.5.0\n     * @param {PIXI.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the texture will be stored against.\n     */\n    core.Texture.addTextureToCache = function addTextureToCache(texture, id)\n    {\n        core.Texture.addToCache(texture, id);\n        warn('Texture.addTextureToCache is deprecated, please use Texture.addToCache from now on.');\n    };\n\n    /**\n     * @static\n     * @function\n     * @name PIXI.Texture.removeTextureFromCache\n     * @see PIXI.Texture.removeFromCache\n     * @deprecated since 4.5.0\n     * @param {string} id - The id of the texture to be removed\n     * @return {PIXI.Texture|null} The texture that was removed\n     */\n    core.Texture.removeTextureFromCache = function removeTextureFromCache(id)\n    {\n        warn('Texture.removeTextureFromCache is deprecated, please use Texture.removeFromCache from now on. '\n         + 'Be aware that Texture.removeFromCache does not automatically its BaseTexture from the BaseTextureCache. '\n         + 'For that, use BaseTexture.removeFromCache');\n\n        core.BaseTexture.removeFromCache(id);\n\n        return core.Texture.removeFromCache(id);\n    };\n\n    Object.defineProperties(filters, {\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.filters.AbstractFilter\n         * @see PIXI.AbstractFilter\n         * @deprecated since version 3.0.6\n         */\n        AbstractFilter: {\n            get()\n            {\n                warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n\n                return core.AbstractFilter;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.filters.SpriteMaskFilter\n         * @see PIXI.SpriteMaskFilter\n         * @deprecated since version 3.0.6\n         */\n        SpriteMaskFilter: {\n            get()\n            {\n                warn('filters.SpriteMaskFilter is an undocumented alias, please use SpriteMaskFilter from now on.');\n\n                return core.SpriteMaskFilter;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.filters.VoidFilter\n         * @see PIXI.filters.AlphaFilter\n         * @deprecated since version 4.5.7\n         */\n        VoidFilter: {\n            get()\n            {\n                warn('VoidFilter has been renamed to AlphaFilter, please use PIXI.filters.AlphaFilter');\n\n                return filters.AlphaFilter;\n            },\n        },\n    });\n\n    /**\n     * @method\n     * @name PIXI.utils.uuid\n     * @see PIXI.utils.uid\n     * @deprecated since version 3.0.6\n     * @return {number} The uid\n     */\n    core.utils.uuid = () =>\n    {\n        warn('utils.uuid() is deprecated, please use utils.uid() from now on.');\n\n        return core.utils.uid();\n    };\n\n    /**\n     * @method\n     * @name PIXI.utils.canUseNewCanvasBlendModes\n     * @see PIXI.CanvasTinter\n     * @deprecated\n     * @return {boolean} Can use blend modes.\n     */\n    core.utils.canUseNewCanvasBlendModes = () =>\n    {\n        warn('utils.canUseNewCanvasBlendModes() is deprecated, please use CanvasTinter.canUseMultiply from now on');\n\n        return core.CanvasTinter.canUseMultiply;\n    };\n\n    let saidHello = true;\n\n    /**\n     * @name PIXI.utils._saidHello\n     * @type {boolean}\n     * @see PIXI.utils.skipHello\n     * @deprecated since 4.1.0\n     */\n    Object.defineProperty(core.utils, '_saidHello', {\n        set(bool)\n        {\n            if (bool)\n            {\n                warn('PIXI.utils._saidHello is deprecated, please use PIXI.utils.skipHello()');\n                this.skipHello();\n            }\n            saidHello = bool;\n        },\n        get()\n        {\n            return saidHello;\n        },\n    });\n\n    if (prepare.BasePrepare)\n    {\n        /**\n         * @method\n         * @name PIXI.prepare.BasePrepare#register\n         * @see PIXI.prepare.BasePrepare#registerFindHook\n         * @deprecated since version 4.4.2\n         * @param {Function} [addHook] - Function call that takes two parameters: `item:*, queue:Array`\n         *        function must return `true` if it was able to add item to the queue.\n         * @param {Function} [uploadHook] - Function call that takes two parameters: `prepare:CanvasPrepare, item:*` and\n         *        function must return `true` if it was able to handle upload of item.\n         * @return {PIXI.BasePrepare} Instance of plugin for chaining.\n         */\n        prepare.BasePrepare.prototype.register = function register(addHook, uploadHook)\n        {\n            warn('renderer.plugins.prepare.register is now deprecated, '\n                + 'please use renderer.plugins.prepare.registerFindHook & renderer.plugins.prepare.registerUploadHook');\n\n            if (addHook)\n            {\n                this.registerFindHook(addHook);\n            }\n\n            if (uploadHook)\n            {\n                this.registerUploadHook(uploadHook);\n            }\n\n            return this;\n        };\n    }\n\n    if (prepare.canvas)\n    {\n        /**\n         * The number of graphics or textures to upload to the GPU.\n         *\n         * @name PIXI.prepare.canvas.UPLOADS_PER_FRAME\n         * @static\n         * @type {number}\n         * @see PIXI.prepare.BasePrepare.limiter\n         * @deprecated since 4.2.0\n         */\n        Object.defineProperty(prepare.canvas, 'UPLOADS_PER_FRAME', {\n            set()\n            {\n                warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please set '\n                    + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n                // because we don't have a reference to the renderer, we can't actually set\n                // the uploads per frame, so we'll have to stick with the warning.\n            },\n            get()\n            {\n                warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please use '\n                    + 'renderer.plugins.prepare.limiter');\n\n                return NaN;\n            },\n        });\n    }\n\n    if (prepare.webgl)\n    {\n        /**\n         * The number of graphics or textures to upload to the GPU.\n         *\n         * @name PIXI.prepare.webgl.UPLOADS_PER_FRAME\n         * @static\n         * @type {number}\n         * @see PIXI.prepare.BasePrepare.limiter\n         * @deprecated since 4.2.0\n         */\n        Object.defineProperty(prepare.webgl, 'UPLOADS_PER_FRAME', {\n            set()\n            {\n                warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please set '\n                    + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n                // because we don't have a reference to the renderer, we can't actually set\n                // the uploads per frame, so we'll have to stick with the warning.\n            },\n            get()\n            {\n                warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please use '\n                    + 'renderer.plugins.prepare.limiter');\n\n                return NaN;\n            },\n        });\n    }\n\n    if (loaders.Loader)\n    {\n        const Resource = loaders.Resource;\n        const Loader = loaders.Loader;\n\n        Object.defineProperties(Resource.prototype, {\n            isJson: {\n                get()\n                {\n                    warn('The isJson property is deprecated, please use `resource.type === Resource.TYPE.JSON`.');\n\n                    return this.type === Resource.TYPE.JSON;\n                },\n            },\n            isXml: {\n                get()\n                {\n                    warn('The isXml property is deprecated, please use `resource.type === Resource.TYPE.XML`.');\n\n                    return this.type === Resource.TYPE.XML;\n                },\n            },\n            isImage: {\n                get()\n                {\n                    warn('The isImage property is deprecated, please use `resource.type === Resource.TYPE.IMAGE`.');\n\n                    return this.type === Resource.TYPE.IMAGE;\n                },\n            },\n            isAudio: {\n                get()\n                {\n                    warn('The isAudio property is deprecated, please use `resource.type === Resource.TYPE.AUDIO`.');\n\n                    return this.type === Resource.TYPE.AUDIO;\n                },\n            },\n            isVideo: {\n                get()\n                {\n                    warn('The isVideo property is deprecated, please use `resource.type === Resource.TYPE.VIDEO`.');\n\n                    return this.type === Resource.TYPE.VIDEO;\n                },\n            },\n        });\n\n        Object.defineProperties(Loader.prototype, {\n            before: {\n                get()\n                {\n                    warn('The before() method is deprecated, please use pre().');\n\n                    return this.pre;\n                },\n            },\n            after: {\n                get()\n                {\n                    warn('The after() method is deprecated, please use use().');\n\n                    return this.use;\n                },\n            },\n        });\n    }\n\n    if (interaction.interactiveTarget)\n    {\n        /**\n         * @name PIXI.interaction.interactiveTarget#defaultCursor\n         * @static\n         * @type {number}\n         * @see PIXI.interaction.interactiveTarget#cursor\n         * @deprecated since 4.3.0\n         */\n        Object.defineProperty(interaction.interactiveTarget, 'defaultCursor', {\n            set(value)\n            {\n                warn('Property defaultCursor has been replaced with \\'cursor\\'. ');\n                this.cursor = value;\n            },\n            get()\n            {\n                warn('Property defaultCursor has been replaced with \\'cursor\\'. ');\n\n                return this.cursor;\n            },\n        });\n    }\n\n    if (interaction.InteractionManager)\n    {\n        /**\n         * @name PIXI.interaction.InteractionManager#defaultCursorStyle\n         * @static\n         * @type {string}\n         * @see PIXI.interaction.InteractionManager#cursorStyles\n         * @deprecated since 4.3.0\n         */\n        Object.defineProperty(interaction.InteractionManager, 'defaultCursorStyle', {\n            set(value)\n            {\n                warn('Property defaultCursorStyle has been replaced with \\'cursorStyles.default\\'. ');\n                this.cursorStyles.default = value;\n            },\n            get()\n            {\n                warn('Property defaultCursorStyle has been replaced with \\'cursorStyles.default\\'. ');\n\n                return this.cursorStyles.default;\n            },\n        });\n\n        /**\n         * @name PIXI.interaction.InteractionManager#currentCursorStyle\n         * @static\n         * @type {string}\n         * @see PIXI.interaction.InteractionManager#cursorStyles\n         * @deprecated since 4.3.0\n         */\n        Object.defineProperty(interaction.InteractionManager, 'currentCursorStyle', {\n            set(value)\n            {\n                warn('Property currentCursorStyle has been removed.'\n                + 'See the currentCursorMode property, which works differently.');\n                this.currentCursorMode = value;\n            },\n            get()\n            {\n                warn('Property currentCursorStyle has been removed.'\n                + 'See the currentCursorMode property, which works differently.');\n\n                return this.currentCursorMode;\n            },\n        });\n    }\n}\n"]}
{"version":3,"sources":["../../../src/filters/alpha/AlphaFilter.js"],"names":["core","AlphaFilter","alpha","glShaderKey","uniforms","uAlpha","value","Filter"],"mappings":";;;;;;AAAA;;IAAYA,I;;AAEZ;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;IAiBqBC,W;;;AAEjB;;;AAGA,2BACA;AAAA,YADYC,KACZ,uEADoB,GACpB;;AAAA;;AAAA,qDACI;AACI;AADJ;AAGI;AAHJ,uLADJ;;AAQI,cAAKA,KAAL,GAAaA,KAAb;AACA,cAAKC,WAAL,GAAmB,OAAnB;AATJ;AAUC;;AAED;;;;;;;;;;4BAOA;AACI,mBAAO,KAAKC,QAAL,CAAcC,MAArB;AACH,S;0BAESC,K,EAAO;AACjB;AACI,iBAAKF,QAAL,CAAcC,MAAd,GAAuBC,KAAvB;AACH;;;;EAhCoCN,KAAKO,M;;kBAAzBN,W","file":"AlphaFilter.js","sourcesContent":["import * as core from '../../core';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\n/**\n * Simplest filter - applies alpha\n *\n * Use this instead of Container's alpha property to avoid visual layering of individual elements.\n * AlphaFilter applies alpha evenly across the entire display object and any opaque elements it contains.\n * If elements are not opaque, they will blend with each other anyway.\n *\n * Very handy if you want to use common features of all filters:\n *\n * 1. Assign a blendMode to this filter, blend all elements inside display object with background.\n *\n * 2. To use clipping in display coordinates, assign a filterArea to the same container that has this filter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nexport default class AlphaFilter extends core.Filter\n{\n    /**\n     * @param {number} [alpha=1] Amount of alpha from 0 to 1, where 0 is transparent\n     */\n    constructor(alpha = 1.0)\n    {\n        super(\n            // vertex shader\n            readFileSync(join(__dirname, '../fragments/default.vert'), 'utf8'),\n            // fragment shader\n            readFileSync(join(__dirname, './alpha.frag'), 'utf8')\n        );\n\n        this.alpha = alpha;\n        this.glShaderKey = 'alpha';\n    }\n\n    /**\n     * Coefficient for alpha multiplication\n     *\n     * @member {number}\n     * @default 1\n     */\n    get alpha()\n    {\n        return this.uniforms.uAlpha;\n    }\n\n    set alpha(value) // eslint-disable-line require-jsdoc\n    {\n        this.uniforms.uAlpha = value;\n    }\n}\n"]}
{"version":3,"sources":["../../../src/filters/blur/generateBlurFragSource.js"],"names":["generateFragBlurSource","GAUSSIAN_VALUES","fragTemplate","join","kernelSize","kernel","halfLength","length","fragSource","blurLoop","template","value","i","blur","replace"],"mappings":";;;kBAqBwBA,sB;AArBxB,IAAMC,kBAAkB;AACpB,OAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CADiB;AAEpB,OAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,CAFiB;AAGpB,OAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,OAAzC,CAHiB;AAIpB,QAAI,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,QAA7B,EAAuC,QAAvC,EAAiD,QAAjD,CAJgB;AAKpB,QAAI,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,QAA7D,CALgB;AAMpB,QAAI,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,OAA/B,EAAwC,QAAxC,EAAkD,QAAlD,EAA4D,QAA5D,EAAsE,QAAtE;AANgB,CAAxB;;AASA,IAAMC,eAAe,CACjB,sCADiB,EAEjB,6BAFiB,EAIjB,iBAJiB,EAKjB,GALiB,EAMjB,+BANiB,EAOjB,YAPiB,EAQjB,GARiB,EAUnBC,IAVmB,CAUd,IAVc,CAArB;;AAYe,SAASH,sBAAT,CAAgCI,UAAhC,EACf;AACI,QAAMC,SAASJ,gBAAgBG,UAAhB,CAAf;AACA,QAAME,aAAaD,OAAOE,MAA1B;;AAEA,QAAIC,aAAaN,YAAjB;;AAEA,QAAIO,WAAW,EAAf;AACA,QAAMC,WAAW,yEAAjB;AACA,QAAIC,cAAJ;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIR,UAApB,EAAgCQ,GAAhC,EACA;AACI,YAAIC,OAAOH,SAASI,OAAT,CAAiB,SAAjB,EAA4BF,CAA5B,CAAX;;AAEAD,gBAAQC,CAAR;;AAEA,YAAIA,KAAKN,UAAT,EACA;AACIK,oBAAQP,aAAaQ,CAAb,GAAiB,CAAzB;AACH;;AAEDC,eAAOA,KAAKC,OAAL,CAAa,SAAb,EAAwBT,OAAOM,KAAP,CAAxB,CAAP;;AAEAF,oBAAYI,IAAZ;AACAJ,oBAAY,IAAZ;AACH;;AAEDD,iBAAaA,WAAWM,OAAX,CAAmB,QAAnB,EAA6BL,QAA7B,CAAb;AACAD,iBAAaA,WAAWM,OAAX,CAAmB,QAAnB,EAA6BV,UAA7B,CAAb;;AAEA,WAAOI,UAAP;AACH","file":"generateBlurFragSource.js","sourcesContent":["const GAUSSIAN_VALUES = {\n    5: [0.153388, 0.221461, 0.250301],\n    7: [0.071303, 0.131514, 0.189879, 0.214607],\n    9: [0.028532, 0.067234, 0.124009, 0.179044, 0.20236],\n    11: [0.0093, 0.028002, 0.065984, 0.121703, 0.175713, 0.198596],\n    13: [0.002406, 0.009255, 0.027867, 0.065666, 0.121117, 0.174868, 0.197641],\n    15: [0.000489, 0.002403, 0.009246, 0.02784, 0.065602, 0.120999, 0.174697, 0.197448],\n};\n\nconst fragTemplate = [\n    'varying vec2 vBlurTexCoords[%size%];',\n    'uniform sampler2D uSampler;',\n\n    'void main(void)',\n    '{',\n    '    gl_FragColor = vec4(0.0);',\n    '    %blur%',\n    '}',\n\n].join('\\n');\n\nexport default function generateFragBlurSource(kernelSize)\n{\n    const kernel = GAUSSIAN_VALUES[kernelSize];\n    const halfLength = kernel.length;\n\n    let fragSource = fragTemplate;\n\n    let blurLoop = '';\n    const template = 'gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;';\n    let value;\n\n    for (let i = 0; i < kernelSize; i++)\n    {\n        let blur = template.replace('%index%', i);\n\n        value = i;\n\n        if (i >= halfLength)\n        {\n            value = kernelSize - i - 1;\n        }\n\n        blur = blur.replace('%value%', kernel[value]);\n\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n\n    fragSource = fragSource.replace('%blur%', blurLoop);\n    fragSource = fragSource.replace('%size%', kernelSize);\n\n    return fragSource;\n}\n"]}
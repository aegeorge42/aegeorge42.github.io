{"version":3,"sources":["../../src/interaction/InteractionTrackingData.js"],"names":["InteractionTrackingData","pointerId","_pointerId","_flags","FLAGS","NONE","_doSet","flag","yn","flags","constructor","OVER","RIGHT_DOWN","LEFT_DOWN","Object","freeze"],"mappings":";;;;;;;;AAAA;;;;;;;IAOqBA,uB;AAEjB;;;AAGA,qCAAYC,SAAZ,EACA;AAAA;;AACI,aAAKC,UAAL,GAAkBD,SAAlB;AACA,aAAKE,MAAL,GAAcH,wBAAwBI,KAAxB,CAA8BC,IAA5C;AACH;;AAED;;;;;;;;sCAMAC,M,mBAAOC,I,EAAMC,E,EACb;AACI,YAAIA,EAAJ,EACA;AACI,iBAAKL,MAAL,GAAc,KAAKA,MAAL,GAAcI,IAA5B;AACH,SAHD,MAKA;AACI,iBAAKJ,MAAL,GAAc,KAAKA,MAAL,GAAe,CAACI,IAA9B;AACH;AACJ,K;;AAED;;;;;;;;;;4BAOA;AACI,mBAAO,KAAKL,UAAZ;AACH;;AAED;;;;;;;;;4BAOA;AACI,mBAAO,KAAKC,MAAZ;AACH;;AAED;;;;;;0BAKUM,K,EACV;AACI,iBAAKN,MAAL,GAAcM,KAAd;AACH;;AAED;;;;;;;;;4BAOA;AACI,mBAAO,KAAKN,MAAL,KAAgB,KAAKO,WAAL,CAAiBN,KAAjB,CAAuBC,IAA9C;AACH;;AAED;;;;;;;;;4BAOA;AACI,mBAAO,CAAC,KAAKF,MAAL,GAAc,KAAKO,WAAL,CAAiBN,KAAjB,CAAuBO,IAAtC,MAAgD,CAAvD;AACH;;AAED;;;;;;0BAKSH,E,EACT;AACI,iBAAKF,MAAL,CAAY,KAAKI,WAAL,CAAiBN,KAAjB,CAAuBO,IAAnC,EAAyCH,EAAzC;AACH;;AAED;;;;;;;;;4BAOA;AACI,mBAAO,CAAC,KAAKL,MAAL,GAAc,KAAKO,WAAL,CAAiBN,KAAjB,CAAuBQ,UAAtC,MAAsD,CAA7D;AACH;;AAED;;;;;;0BAKcJ,E,EACd;AACI,iBAAKF,MAAL,CAAY,KAAKI,WAAL,CAAiBN,KAAjB,CAAuBQ,UAAnC,EAA+CJ,EAA/C;AACH;;AAED;;;;;;;;;4BAOA;AACI,mBAAO,CAAC,KAAKL,MAAL,GAAc,KAAKO,WAAL,CAAiBN,KAAjB,CAAuBS,SAAtC,MAAqD,CAA5D;AACH;;AAED;;;;;;0BAKaL,E,EACb;AACI,iBAAKF,MAAL,CAAY,KAAKI,WAAL,CAAiBN,KAAjB,CAAuBS,SAAnC,EAA8CL,EAA9C;AACH;;;;;;kBArIgBR,uB;;;AAwIrBA,wBAAwBI,KAAxB,GAAgCU,OAAOC,MAAP,CAAc;AAC1CV,UAAM,CADoC;AAE1CM,UAAM,KAAK,CAF+B;AAG1CE,eAAW,KAAK,CAH0B;AAI1CD,gBAAY,KAAK;AAJyB,CAAd,CAAhC","file":"InteractionTrackingData.js","sourcesContent":["/**\n * DisplayObjects with the {@link PIXI.interaction.interactiveTarget} mixin use this class to track interactions\n *\n * @class\n * @private\n * @memberof PIXI.interaction\n */\nexport default class InteractionTrackingData\n{\n    /**\n     * @param {number} pointerId - Unique pointer id of the event\n     */\n    constructor(pointerId)\n    {\n        this._pointerId = pointerId;\n        this._flags = InteractionTrackingData.FLAGS.NONE;\n    }\n\n    /**\n     *\n     * @private\n     * @param {number} flag - The interaction flag to set\n     * @param {boolean} yn - Should the flag be set or unset\n     */\n    _doSet(flag, yn)\n    {\n        if (yn)\n        {\n            this._flags = this._flags | flag;\n        }\n        else\n        {\n            this._flags = this._flags & (~flag);\n        }\n    }\n\n    /**\n     * Unique pointer id of the event\n     *\n     * @readonly\n     * @member {number}\n     */\n    get pointerId()\n    {\n        return this._pointerId;\n    }\n\n    /**\n     * State of the tracking data, expressed as bit flags\n     *\n     * @member {number}\n     * @memberof PIXI.interaction.InteractionTrackingData#\n     */\n    get flags()\n    {\n        return this._flags;\n    }\n\n    /**\n     * Set the flags for the tracking data\n     *\n     * @param {number} flags - Flags to set\n     */\n    set flags(flags)\n    {\n        this._flags = flags;\n    }\n\n    /**\n     * Is the tracked event inactive (not over or down)?\n     *\n     * @member {number}\n     * @memberof PIXI.interaction.InteractionTrackingData#\n     */\n    get none()\n    {\n        return this._flags === this.constructor.FLAGS.NONE;\n    }\n\n    /**\n     * Is the tracked event over the DisplayObject?\n     *\n     * @member {boolean}\n     * @memberof PIXI.interaction.InteractionTrackingData#\n     */\n    get over()\n    {\n        return (this._flags & this.constructor.FLAGS.OVER) !== 0;\n    }\n\n    /**\n     * Set the over flag\n     *\n     * @param {boolean} yn - Is the event over?\n     */\n    set over(yn)\n    {\n        this._doSet(this.constructor.FLAGS.OVER, yn);\n    }\n\n    /**\n     * Did the right mouse button come down in the DisplayObject?\n     *\n     * @member {boolean}\n     * @memberof PIXI.interaction.InteractionTrackingData#\n     */\n    get rightDown()\n    {\n        return (this._flags & this.constructor.FLAGS.RIGHT_DOWN) !== 0;\n    }\n\n    /**\n     * Set the right down flag\n     *\n     * @param {boolean} yn - Is the right mouse button down?\n     */\n    set rightDown(yn)\n    {\n        this._doSet(this.constructor.FLAGS.RIGHT_DOWN, yn);\n    }\n\n    /**\n     * Did the left mouse button come down in the DisplayObject?\n     *\n     * @member {boolean}\n     * @memberof PIXI.interaction.InteractionTrackingData#\n     */\n    get leftDown()\n    {\n        return (this._flags & this.constructor.FLAGS.LEFT_DOWN) !== 0;\n    }\n\n    /**\n     * Set the left down flag\n     *\n     * @param {boolean} yn - Is the left mouse button down?\n     */\n    set leftDown(yn)\n    {\n        this._doSet(this.constructor.FLAGS.LEFT_DOWN, yn);\n    }\n}\n\nInteractionTrackingData.FLAGS = Object.freeze({\n    NONE: 0,\n    OVER: 1 << 0,\n    LEFT_DOWN: 1 << 1,\n    RIGHT_DOWN: 1 << 2,\n});\n"]}
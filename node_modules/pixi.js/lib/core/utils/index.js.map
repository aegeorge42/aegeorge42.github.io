{"version":3,"sources":["../../../src/core/utils/index.js"],"names":["uid","hex2rgb","hex2string","rgb2hex","getResolutionOfUrl","decomposeDataUri","getUrlFileExtension","getSvgSize","skipHello","sayHello","isWebGLSupported","sign","destroyTextureCache","clearTextureCache","correctBlendMode","premultiplyTint","premultiplyRgba","premultiplyTintToRgba","mixins","isMobile","nextUid","saidHello","removeItems","EventEmitter","pluginTarget","earcut","hex","out","toString","substr","length","rgb","url","defaultValue","resolution","RETINA_PREFIX","exec","parseFloat","undefined","dataUri","dataUriMatch","mediaType","toLowerCase","subType","charset","encoding","data","extension","svgString","sizeMatch","size","Math","round","type","navigator","userAgent","indexOf","args","window","console","log","apply","contextOptions","stencil","failIfMajorPerformanceCaveat","WebGLRenderingContext","canvas","document","createElement","gl","getContext","success","getContextAttributes","loseContext","getExtension","e","n","TextureCache","Object","create","BaseTextureCache","key","destroy","premultiplyBlendMode","blendMode","premultiplied","tint","alpha","R","G","B","premultiply","Float32Array"],"mappings":"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","file":"index.js","sourcesContent":["import { DATA_URI, URL_FILE_EXTENSION, SVG_SIZE, VERSION } from '../const';\nimport settings from '../settings';\nimport EventEmitter from 'eventemitter3';\nimport pluginTarget from './pluginTarget';\nimport * as mixins from './mixin';\nimport * as isMobile from 'ismobilejs';\nimport removeItems from 'remove-array-items';\nimport mapPremultipliedBlendModes from './mapPremultipliedBlendModes';\nimport earcut from 'earcut';\n\nlet nextUid = 0;\nlet saidHello = false;\n\n/**\n * Generalized convenience utilities for PIXI.\n * @example\n * // Extend PIXI's internal Event Emitter.\n * class MyEmitter extends PIXI.utils.EventEmitter {\n *   constructor() {\n *      super();\n *      console.log(\"Emitter created!\");\n *   }\n * }\n *\n * // Get info on current device\n * console.log(PIXI.utils.isMobile);\n *\n * // Convert hex color to string\n * console.log(PIXI.utils.hex2string(0xff00ff)); // returns: \"#ff00ff\"\n * @namespace PIXI.utils\n */\nexport {\n    /**\n     * @see {@link https://github.com/kaimallea/isMobile}\n     *\n     * @memberof PIXI.utils\n     * @function isMobile\n     * @type {Object}\n     */\n    isMobile,\n\n    /**\n     * @see {@link https://github.com/mreinstein/remove-array-items}\n     *\n     * @memberof PIXI.utils\n     * @function removeItems\n     * @type {Object}\n     */\n    removeItems,\n    /**\n     * @see {@link https://github.com/primus/eventemitter3}\n     *\n     * @memberof PIXI.utils\n     * @class EventEmitter\n     * @type {EventEmitter}\n     */\n    EventEmitter,\n    /**\n     * @memberof PIXI.utils\n     * @function pluginTarget\n     * @type {mixin}\n     */\n    pluginTarget,\n    mixins,\n    /**\n     * @see {@link https://github.com/mapbox/earcut}\n     *\n     * @memberof PIXI.utils\n     * @function earcut\n     * @param {number[]} vertices - A flat array of vertice coordinates\n     * @param {number[]} [holes] - An array of hole indices\n     * @param {number} [dimensions=2] The number of coordinates per vertice in the input array\n     * @return {number[]} Triangulated polygon\n     */\n    earcut,\n};\n\n/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\nexport function uid()\n{\n    return ++nextUid;\n}\n\n/**\n * Converts a hex color number to an [R, G, B] array\n *\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The number to convert\n * @param  {number[]} [out=[]] If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color.\n */\nexport function hex2rgb(hex, out)\n{\n    out = out || [];\n\n    out[0] = ((hex >> 16) & 0xFF) / 255;\n    out[1] = ((hex >> 8) & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n\n    return out;\n}\n\n/**\n * Converts a hex color number to a string.\n *\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex\n * @return {string} The string color.\n */\nexport function hex2string(hex)\n{\n    hex = hex.toString(16);\n    hex = '000000'.substr(0, 6 - hex.length) + hex;\n\n    return `#${hex}`;\n}\n\n/**\n * Converts a color as an [R, G, B] array to a hex number\n *\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - rgb array\n * @return {number} The color number\n */\nexport function rgb2hex(rgb)\n{\n    return (((rgb[0] * 255) << 16) + ((rgb[1] * 255) << 8) + (rgb[2] * 255 | 0));\n}\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @return {number} resolution / device pixel ratio of an asset\n */\nexport function getResolutionOfUrl(url, defaultValue)\n{\n    const resolution = settings.RETINA_PREFIX.exec(url);\n\n    if (resolution)\n    {\n        return parseFloat(resolution[1]);\n    }\n\n    return defaultValue !== undefined ? defaultValue : 1;\n}\n\n/**\n * Typedef for decomposeDataUri return object.\n *\n * @typedef {object} PIXI.utils~DecomposedDataUri\n * @property {mediaType} Media type, eg. `image`\n * @property {subType} Sub type, eg. `png`\n * @property {encoding} Data encoding, eg. `base64`\n * @property {data} The actual data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {PIXI.utils~DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nexport function decomposeDataUri(dataUri)\n{\n    const dataUriMatch = DATA_URI.exec(dataUri);\n\n    if (dataUriMatch)\n    {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\n            data: dataUriMatch[5],\n        };\n    }\n\n    return undefined;\n}\n\n/**\n * Get type of the image by regexp for extension. Returns undefined for unknown extensions.\n *\n * @memberof PIXI.utils\n * @function getUrlFileExtension\n * @param {string} url - the image path\n * @return {string|undefined} image extension\n */\nexport function getUrlFileExtension(url)\n{\n    const extension = URL_FILE_EXTENSION.exec(url);\n\n    if (extension)\n    {\n        return extension[1].toLowerCase();\n    }\n\n    return undefined;\n}\n\n/**\n * Typedef for Size object.\n *\n * @typedef {object} PIXI.utils~Size\n * @property {width} Width component\n * @property {height} Height component\n */\n\n/**\n * Get size from an svg string using regexp.\n *\n * @memberof PIXI.utils\n * @function getSvgSize\n * @param {string} svgString - a serialized svg element\n * @return {PIXI.utils~Size|undefined} image extension\n */\nexport function getSvgSize(svgString)\n{\n    const sizeMatch = SVG_SIZE.exec(svgString);\n    const size = {};\n\n    if (sizeMatch)\n    {\n        size[sizeMatch[1]] = Math.round(parseFloat(sizeMatch[3]));\n        size[sizeMatch[5]] = Math.round(parseFloat(sizeMatch[7]));\n    }\n\n    return size;\n}\n\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */\nexport function skipHello()\n{\n    saidHello = true;\n}\n\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever makes you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nexport function sayHello(type)\n{\n    if (saidHello)\n    {\n        return;\n    }\n\n    if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n    {\n        const args = [\n            `\\n %c %c %c PixiJS ${VERSION} - ✰ ${type} ✰  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ \\n\\n`,\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff66a5; background: #030307; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ffc3dc; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n        ];\n\n        window.console.log.apply(console, args);\n    }\n    else if (window.console)\n    {\n        window.console.log(`PixiJS ${VERSION} - ${type} - http://www.pixijs.com/`);\n    }\n\n    saidHello = true;\n}\n\n/**\n * Helper for checking for webgl support\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} is webgl supported\n */\nexport function isWebGLSupported()\n{\n    const contextOptions = { stencil: true, failIfMajorPerformanceCaveat: true };\n\n    try\n    {\n        if (!window.WebGLRenderingContext)\n        {\n            return false;\n        }\n\n        const canvas = document.createElement('canvas');\n        let gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n\n        const success = !!(gl && gl.getContextAttributes().stencil);\n\n        if (gl)\n        {\n            const loseContext = gl.getExtension('WEBGL_lose_context');\n\n            if (loseContext)\n            {\n                loseContext.loseContext();\n            }\n        }\n\n        gl = null;\n\n        return success;\n    }\n    catch (e)\n    {\n        return false;\n    }\n}\n\n/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nexport function sign(n)\n{\n    if (n === 0) return 0;\n\n    return n < 0 ? -1 : 1;\n}\n\n/**\n * @todo Describe property usage\n *\n * @memberof PIXI.utils\n * @private\n */\nexport const TextureCache = Object.create(null);\n\n/**\n * @todo Describe property usage\n *\n * @memberof PIXI.utils\n * @private\n */\nexport const BaseTextureCache = Object.create(null);\n\n/**\n * Destroys all texture in the cache\n *\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */\nexport function destroyTextureCache()\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        TextureCache[key].destroy();\n    }\n    for (key in BaseTextureCache)\n    {\n        BaseTextureCache[key].destroy();\n    }\n}\n\n/**\n * Removes all textures from cache, but does not destroy them\n *\n * @memberof PIXI.utils\n * @function clearTextureCache\n */\nexport function clearTextureCache()\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        delete TextureCache[key];\n    }\n    for (key in BaseTextureCache)\n    {\n        delete BaseTextureCache[key];\n    }\n}\n\n/**\n * maps premultiply flag and blendMode to adjusted blendMode\n * @memberof PIXI.utils\n * @const premultiplyBlendMode\n * @type {Array<number[]>}\n */\nexport const premultiplyBlendMode = mapPremultipliedBlendModes();\n\n/**\n * changes blendMode according to texture format\n *\n * @memberof PIXI.utils\n * @function correctBlendMode\n * @param {number} blendMode supposed blend mode\n * @param {boolean} premultiplied  whether source is premultiplied\n * @returns {number} true blend mode for this texture\n */\nexport function correctBlendMode(blendMode, premultiplied)\n{\n    return premultiplyBlendMode[premultiplied ? 1 : 0][blendMode];\n}\n\n/**\n * premultiplies tint\n *\n * @memberof PIXI.utils\n * @param {number} tint integet RGB\n * @param {number} alpha floating point alpha (0.0-1.0)\n * @returns {number} tint multiplied by alpha\n */\nexport function premultiplyTint(tint, alpha)\n{\n    if (alpha === 1.0)\n    {\n        return (alpha * 255 << 24) + tint;\n    }\n    if (alpha === 0.0)\n    {\n        return 0;\n    }\n    let R = ((tint >> 16) & 0xFF);\n    let G = ((tint >> 8) & 0xFF);\n    let B = (tint & 0xFF);\n\n    R = ((R * alpha) + 0.5) | 0;\n    G = ((G * alpha) + 0.5) | 0;\n    B = ((B * alpha) + 0.5) | 0;\n\n    return (alpha * 255 << 24) + (R << 16) + (G << 8) + B;\n}\n\n/**\n * combines rgb and alpha to out array\n *\n * @memberof PIXI.utils\n * @param {Float32Array|number[]} rgb input rgb\n * @param {number} alpha alpha param\n * @param {Float32Array} [out] output\n * @param {boolean} [premultiply=true] do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyRgba(rgb, alpha, out, premultiply)\n{\n    out = out || new Float32Array(4);\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] = rgb[0] * alpha;\n        out[1] = rgb[1] * alpha;\n        out[2] = rgb[2] * alpha;\n    }\n    else\n    {\n        out[0] = rgb[0];\n        out[1] = rgb[1];\n        out[2] = rgb[2];\n    }\n    out[3] = alpha;\n\n    return out;\n}\n\n/**\n * converts integer tint and float alpha to vec4 form, premultiplies by default\n *\n * @memberof PIXI.utils\n * @param {number} tint input tint\n * @param {number} alpha alpha param\n * @param {Float32Array} [out] output\n * @param {boolean} [premultiply=true] do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyTintToRgba(tint, alpha, out, premultiply)\n{\n    out = out || new Float32Array(4);\n    out[0] = ((tint >> 16) & 0xFF) / 255.0;\n    out[1] = ((tint >> 8) & 0xFF) / 255.0;\n    out[2] = (tint & 0xFF) / 255.0;\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] *= alpha;\n        out[1] *= alpha;\n        out[2] *= alpha;\n    }\n    out[3] = alpha;\n\n    return out;\n}\n"]}
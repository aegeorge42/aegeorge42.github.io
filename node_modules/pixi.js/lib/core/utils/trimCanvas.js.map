{"version":3,"sources":["../../../src/core/utils/trimCanvas.js"],"names":["trimCanvas","canvas","width","height","context","getContext","imageData","getImageData","pixels","data","len","length","bound","top","left","right","bottom","i","x","y"],"mappings":";;;kBASwBA,U;AATxB;;;;;;;;;AASe,SAASA,UAAT,CAAoBC,MAApB,EACf;AACI;;AAEA,QAAIC,QAAQD,OAAOC,KAAnB;AACA,QAAIC,SAASF,OAAOE,MAApB;;AAEA,QAAMC,UAAUH,OAAOI,UAAP,CAAkB,IAAlB,CAAhB;AACA,QAAMC,YAAYF,QAAQG,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2BL,KAA3B,EAAkCC,MAAlC,CAAlB;AACA,QAAMK,SAASF,UAAUG,IAAzB;AACA,QAAMC,MAAMF,OAAOG,MAAnB;;AAEA,QAAMC,QAAQ;AACVC,aAAK,IADK;AAEVC,cAAM,IAFI;AAGVC,eAAO,IAHG;AAIVC,gBAAQ;AAJE,KAAd;AAMA,QAAIP,OAAO,IAAX;AACA,QAAIQ,UAAJ;AACA,QAAIC,UAAJ;AACA,QAAIC,UAAJ;;AAEA,SAAKF,IAAI,CAAT,EAAYA,IAAIP,GAAhB,EAAqBO,KAAK,CAA1B,EACA;AACI,YAAIT,OAAOS,IAAI,CAAX,MAAkB,CAAtB,EACA;AACIC,gBAAKD,IAAI,CAAL,GAAUf,KAAd;AACAiB,gBAAI,CAAC,EAAGF,IAAI,CAAL,GAAUf,KAAZ,CAAL;;AAEA,gBAAIU,MAAMC,GAAN,KAAc,IAAlB,EACA;AACID,sBAAMC,GAAN,GAAYM,CAAZ;AACH;;AAED,gBAAIP,MAAME,IAAN,KAAe,IAAnB,EACA;AACIF,sBAAME,IAAN,GAAaI,CAAb;AACH,aAHD,MAIK,IAAIA,IAAIN,MAAME,IAAd,EACL;AACIF,sBAAME,IAAN,GAAaI,CAAb;AACH;;AAED,gBAAIN,MAAMG,KAAN,KAAgB,IAApB,EACA;AACIH,sBAAMG,KAAN,GAAcG,IAAI,CAAlB;AACH,aAHD,MAIK,IAAIN,MAAMG,KAAN,GAAcG,CAAlB,EACL;AACIN,sBAAMG,KAAN,GAAcG,IAAI,CAAlB;AACH;;AAED,gBAAIN,MAAMI,MAAN,KAAiB,IAArB,EACA;AACIJ,sBAAMI,MAAN,GAAeG,CAAf;AACH,aAHD,MAIK,IAAIP,MAAMI,MAAN,GAAeG,CAAnB,EACL;AACIP,sBAAMI,MAAN,GAAeG,CAAf;AACH;AACJ;AACJ;;AAED,QAAIP,MAAMC,GAAN,KAAc,IAAlB,EACA;AACIX,gBAAQU,MAAMG,KAAN,GAAcH,MAAME,IAA5B;AACAX,iBAASS,MAAMI,MAAN,GAAeJ,MAAMC,GAArB,GAA2B,CAApC;AACAJ,eAAOL,QAAQG,YAAR,CAAqBK,MAAME,IAA3B,EAAiCF,MAAMC,GAAvC,EAA4CX,KAA5C,EAAmDC,MAAnD,CAAP;AACH;;AAED,WAAO;AACHA,sBADG;AAEHD,oBAFG;AAGHO;AAHG,KAAP;AAKH","file":"trimCanvas.js","sourcesContent":["/**\n * Trim transparent borders from a canvas\n *\n * @memberof PIXI\n * @function trimCanvas\n * @private\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */\nexport default function trimCanvas(canvas)\n{\n    // https://gist.github.com/remy/784508\n\n    let width = canvas.width;\n    let height = canvas.height;\n\n    const context = canvas.getContext('2d');\n    const imageData = context.getImageData(0, 0, width, height);\n    const pixels = imageData.data;\n    const len = pixels.length;\n\n    const bound = {\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n    };\n    let data = null;\n    let i;\n    let x;\n    let y;\n\n    for (i = 0; i < len; i += 4)\n    {\n        if (pixels[i + 3] !== 0)\n        {\n            x = (i / 4) % width;\n            y = ~~((i / 4) / width);\n\n            if (bound.top === null)\n            {\n                bound.top = y;\n            }\n\n            if (bound.left === null)\n            {\n                bound.left = x;\n            }\n            else if (x < bound.left)\n            {\n                bound.left = x;\n            }\n\n            if (bound.right === null)\n            {\n                bound.right = x + 1;\n            }\n            else if (bound.right < x)\n            {\n                bound.right = x + 1;\n            }\n\n            if (bound.bottom === null)\n            {\n                bound.bottom = y;\n            }\n            else if (bound.bottom < y)\n            {\n                bound.bottom = y;\n            }\n        }\n    }\n\n    if (bound.top !== null)\n    {\n        width = bound.right - bound.left;\n        height = bound.bottom - bound.top + 1;\n        data = context.getImageData(bound.left, bound.top, width, height);\n    }\n\n    return {\n        height,\n        width,\n        data,\n    };\n}\n"]}
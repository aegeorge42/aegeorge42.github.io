{"version":3,"sources":["../../../src/core/utils/determineCrossOrigin.js"],"names":["determineCrossOrigin","tempAnchor","url","loc","window","location","indexOf","document","createElement","href","parse","samePort","port","hostname","protocol"],"mappings":";;;kBAewBA,oB;;AAfxB;;;;;;AAEA,IAAIC,mBAAJ;;AAEA;;;;;;;;;;;AAWe,SAASD,oBAAT,CAA8BE,GAA9B,EACf;AAAA,QADkDC,GAClD,uEADwDC,OAAOC,QAC/D;;AACI;AACA,QAAIH,IAAII,OAAJ,CAAY,OAAZ,MAAyB,CAA7B,EACA;AACI,eAAO,EAAP;AACH;;AAED;AACAH,UAAMA,OAAOC,OAAOC,QAApB;;AAEA,QAAI,CAACJ,UAAL,EACA;AACIA,qBAAaM,SAASC,aAAT,CAAuB,GAAvB,CAAb;AACH;;AAED;AACA;AACA;AACAP,eAAWQ,IAAX,GAAkBP,GAAlB;AACAA,UAAM,cAAKQ,KAAL,CAAWT,WAAWQ,IAAtB,CAAN;;AAEA,QAAME,WAAY,CAACT,IAAIU,IAAL,IAAaT,IAAIS,IAAJ,KAAa,EAA3B,IAAmCV,IAAIU,IAAJ,KAAaT,IAAIS,IAArE;;AAEA;AACA,QAAIV,IAAIW,QAAJ,KAAiBV,IAAIU,QAArB,IAAiC,CAACF,QAAlC,IAA8CT,IAAIY,QAAJ,KAAiBX,IAAIW,QAAvE,EACA;AACI,eAAO,WAAP;AACH;;AAED,WAAO,EAAP;AACH","file":"determineCrossOrigin.js","sourcesContent":["import _url from 'url';\n\nlet tempAnchor;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nexport default function determineCrossOrigin(url, loc = window.location)\n{\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0)\n    {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor)\n    {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    url = _url.parse(tempAnchor.href);\n\n    const samePort = (!url.port && loc.port === '') || (url.port === loc.port);\n\n    // if cross origin\n    if (url.hostname !== loc.hostname || !samePort || url.protocol !== loc.protocol)\n    {\n        return 'anonymous';\n    }\n\n    return '';\n}\n"]}
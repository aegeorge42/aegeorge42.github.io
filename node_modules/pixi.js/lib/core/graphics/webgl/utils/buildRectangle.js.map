{"version":3,"sources":["../../../../../src/core/graphics/webgl/utils/buildRectangle.js"],"names":["buildRectangle","graphicsData","webGLData","webGLDataNativeLines","rectData","shape","x","y","width","height","fill","color","fillColor","alpha","fillAlpha","r","g","b","verts","points","indices","vertPos","length","push","lineWidth","tempPoints"],"mappings":";;;kBAcwBA,c;;AAdxB;;;;AACA;;;;AAEA;;;;;;;;;;;AAWe,SAASA,cAAT,CAAwBC,YAAxB,EAAsCC,SAAtC,EAAiDC,oBAAjD,EACf;AACI;AACA;AACA;AACA,QAAMC,WAAWH,aAAaI,KAA9B;AACA,QAAMC,IAAIF,SAASE,CAAnB;AACA,QAAMC,IAAIH,SAASG,CAAnB;AACA,QAAMC,QAAQJ,SAASI,KAAvB;AACA,QAAMC,SAASL,SAASK,MAAxB;;AAEA,QAAIR,aAAaS,IAAjB,EACA;AACI,YAAMC,QAAQ,oBAAQV,aAAaW,SAArB,CAAd;AACA,YAAMC,QAAQZ,aAAaa,SAA3B;;AAEA,YAAMC,IAAIJ,MAAM,CAAN,IAAWE,KAArB;AACA,YAAMG,IAAIL,MAAM,CAAN,IAAWE,KAArB;AACA,YAAMI,IAAIN,MAAM,CAAN,IAAWE,KAArB;;AAEA,YAAMK,QAAQhB,UAAUiB,MAAxB;AACA,YAAMC,UAAUlB,UAAUkB,OAA1B;;AAEA,YAAMC,UAAUH,MAAMI,MAAN,GAAe,CAA/B;;AAEA;AACAJ,cAAMK,IAAN,CAAWjB,CAAX,EAAcC,CAAd;AACAW,cAAMK,IAAN,CAAWR,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBJ,KAApB;;AAEAK,cAAMK,IAAN,CAAWjB,IAAIE,KAAf,EAAsBD,CAAtB;AACAW,cAAMK,IAAN,CAAWR,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBJ,KAApB;;AAEAK,cAAMK,IAAN,CAAWjB,CAAX,EAAcC,IAAIE,MAAlB;AACAS,cAAMK,IAAN,CAAWR,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBJ,KAApB;;AAEAK,cAAMK,IAAN,CAAWjB,IAAIE,KAAf,EAAsBD,IAAIE,MAA1B;AACAS,cAAMK,IAAN,CAAWR,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBJ,KAApB;;AAEA;AACAO,gBAAQG,IAAR,CAAaF,OAAb,EAAsBA,OAAtB,EAA+BA,UAAU,CAAzC,EAA4CA,UAAU,CAAtD,EAAyDA,UAAU,CAAnE,EAAsEA,UAAU,CAAhF;AACH;;AAED,QAAIpB,aAAauB,SAAjB,EACA;AACI,YAAMC,aAAaxB,aAAakB,MAAhC;;AAEAlB,qBAAakB,MAAb,GAAsB,CAACb,CAAD,EAAIC,CAAJ,EAClBD,IAAIE,KADc,EACPD,CADO,EAElBD,IAAIE,KAFc,EAEPD,IAAIE,MAFG,EAGlBH,CAHkB,EAGfC,IAAIE,MAHW,EAIlBH,CAJkB,EAIfC,CAJe,CAAtB;;AAMA,iCAAUN,YAAV,EAAwBC,SAAxB,EAAmCC,oBAAnC;;AAEAF,qBAAakB,MAAb,GAAsBM,UAAtB;AACH;AACJ","file":"buildRectangle.js","sourcesContent":["import buildLine from './buildLine';\nimport { hex2rgb } from '../../../utils';\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the webGL-specific information to create nativeLines\n */\nexport default function buildRectangle(graphicsData, webGLData, webGLDataNativeLines)\n{\n    // --- //\n    // need to convert points to a nice regular data\n    //\n    const rectData = graphicsData.shape;\n    const x = rectData.x;\n    const y = rectData.y;\n    const width = rectData.width;\n    const height = rectData.height;\n\n    if (graphicsData.fill)\n    {\n        const color = hex2rgb(graphicsData.fillColor);\n        const alpha = graphicsData.fillAlpha;\n\n        const r = color[0] * alpha;\n        const g = color[1] * alpha;\n        const b = color[2] * alpha;\n\n        const verts = webGLData.points;\n        const indices = webGLData.indices;\n\n        const vertPos = verts.length / 6;\n\n        // start\n        verts.push(x, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x, y + height);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y + height);\n        verts.push(r, g, b, alpha);\n\n        // insert 2 dead triangles..\n        indices.push(vertPos, vertPos, vertPos + 1, vertPos + 2, vertPos + 3, vertPos + 3);\n    }\n\n    if (graphicsData.lineWidth)\n    {\n        const tempPoints = graphicsData.points;\n\n        graphicsData.points = [x, y,\n            x + width, y,\n            x + width, y + height,\n            x, y + height,\n            x, y];\n\n        buildLine(graphicsData, webGLData, webGLDataNativeLines);\n\n        graphicsData.points = tempPoints;\n    }\n}\n"]}
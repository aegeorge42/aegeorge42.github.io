{"version":3,"sources":["../../../../../src/core/renderers/canvas/utils/canUseNewCanvasBlendModes.js"],"names":["canUseNewCanvasBlendModes","createColoredCanvas","color","canvas","document","createElement","width","height","context","getContext","fillStyle","fillRect","magenta","yellow","globalCompositeOperation","drawImage","imageData","getImageData","data"],"mappings":";;;kBA2BwBA,yB;AA3BxB;;;;;;;AAOA,SAASC,mBAAT,CAA6BC,KAA7B,EACA;AACI,QAAMC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;;AAEAF,WAAOG,KAAP,GAAe,CAAf;AACAH,WAAOI,MAAP,GAAgB,CAAhB;;AAEA,QAAMC,UAAUL,OAAOM,UAAP,CAAkB,IAAlB,CAAhB;;AAEAD,YAAQE,SAAR,GAAoBR,KAApB;AACAM,YAAQG,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;;AAEA,WAAOR,MAAP;AACH;;AAED;;;;;AAKe,SAASH,yBAAT,GACf;AACI,QAAI,OAAOI,QAAP,KAAoB,WAAxB,EACA;AACI,eAAO,KAAP;AACH;;AAED,QAAMQ,UAAUX,oBAAoB,SAApB,CAAhB;AACA,QAAMY,SAASZ,oBAAoB,SAApB,CAAf;;AAEA,QAAME,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;;AAEAF,WAAOG,KAAP,GAAe,CAAf;AACAH,WAAOI,MAAP,GAAgB,CAAhB;;AAEA,QAAMC,UAAUL,OAAOM,UAAP,CAAkB,IAAlB,CAAhB;;AAEAD,YAAQM,wBAAR,GAAmC,UAAnC;AACAN,YAAQO,SAAR,CAAkBH,OAAlB,EAA2B,CAA3B,EAA8B,CAA9B;AACAJ,YAAQO,SAAR,CAAkBF,MAAlB,EAA0B,CAA1B,EAA6B,CAA7B;;AAEA,QAAMG,YAAYR,QAAQS,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,CAAlB;;AAEA,QAAI,CAACD,SAAL,EACA;AACI,eAAO,KAAP;AACH;;AAED,QAAME,OAAOF,UAAUE,IAAvB;;AAEA,WAAQA,KAAK,CAAL,MAAY,GAAZ,IAAmBA,KAAK,CAAL,MAAY,CAA/B,IAAoCA,KAAK,CAAL,MAAY,CAAxD;AACH","file":"canUseNewCanvasBlendModes.js","sourcesContent":["/**\n * Creates a little colored canvas\n *\n * @ignore\n * @param {string} color - The color to make the canvas\n * @return {canvas} a small canvas element\n */\nfunction createColoredCanvas(color)\n{\n    const canvas = document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    const context = canvas.getContext('2d');\n\n    context.fillStyle = color;\n    context.fillRect(0, 0, 6, 1);\n\n    return canvas;\n}\n\n/**\n * Checks whether the Canvas BlendModes are supported by the current browser\n *\n * @return {boolean} whether they are supported\n */\nexport default function canUseNewCanvasBlendModes()\n{\n    if (typeof document === 'undefined')\n    {\n        return false;\n    }\n\n    const magenta = createColoredCanvas('#ff00ff');\n    const yellow = createColoredCanvas('#ffff00');\n\n    const canvas = document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    const context = canvas.getContext('2d');\n\n    context.globalCompositeOperation = 'multiply';\n    context.drawImage(magenta, 0, 0);\n    context.drawImage(yellow, 2, 0);\n\n    const imageData = context.getImageData(2, 0, 1, 1);\n\n    if (!imageData)\n    {\n        return false;\n    }\n\n    const data = imageData.data;\n\n    return (data[0] === 255 && data[1] === 0 && data[2] === 0);\n}\n"]}
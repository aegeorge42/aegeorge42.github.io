{"version":3,"sources":["../../../src/core/textures/TextureUvs.js"],"names":["TextureUvs","x0","y0","x1","y1","x2","y2","x3","y3","uvsUint32","Uint32Array","set","frame","baseFrame","rotate","tw","width","th","height","w2","h2","cX","x","cY","y","add","NW","uX","uY","Math","round"],"mappings":"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","file":"TextureUvs.js","sourcesContent":["import GroupD8 from '../math/GroupD8';\n\n/**\n * A standard object to store the Uvs of a texture\n *\n * @class\n * @private\n * @memberof PIXI\n */\nexport default class TextureUvs\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        this.x0 = 0;\n        this.y0 = 0;\n\n        this.x1 = 1;\n        this.y1 = 0;\n\n        this.x2 = 1;\n        this.y2 = 1;\n\n        this.x3 = 0;\n        this.y3 = 1;\n\n        this.uvsUint32 = new Uint32Array(4);\n    }\n\n    /**\n     * Sets the texture Uvs based on the given frame information.\n     *\n     * @private\n     * @param {PIXI.Rectangle} frame - The frame of the texture\n     * @param {PIXI.Rectangle} baseFrame - The base frame of the texture\n     * @param {number} rotate - Rotation of frame, see {@link PIXI.GroupD8}\n     */\n    set(frame, baseFrame, rotate)\n    {\n        const tw = baseFrame.width;\n        const th = baseFrame.height;\n\n        if (rotate)\n        {\n            // width and height div 2 div baseFrame size\n            const w2 = frame.width / 2 / tw;\n            const h2 = frame.height / 2 / th;\n\n            // coordinates of center\n            const cX = (frame.x / tw) + w2;\n            const cY = (frame.y / th) + h2;\n\n            rotate = GroupD8.add(rotate, GroupD8.NW); // NW is top-left corner\n            this.x0 = cX + (w2 * GroupD8.uX(rotate));\n            this.y0 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2); // rotate 90 degrees clockwise\n            this.x1 = cX + (w2 * GroupD8.uX(rotate));\n            this.y1 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2);\n            this.x2 = cX + (w2 * GroupD8.uX(rotate));\n            this.y2 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2);\n            this.x3 = cX + (w2 * GroupD8.uX(rotate));\n            this.y3 = cY + (h2 * GroupD8.uY(rotate));\n        }\n        else\n        {\n            this.x0 = frame.x / tw;\n            this.y0 = frame.y / th;\n\n            this.x1 = (frame.x + frame.width) / tw;\n            this.y1 = frame.y / th;\n\n            this.x2 = (frame.x + frame.width) / tw;\n            this.y2 = (frame.y + frame.height) / th;\n\n            this.x3 = frame.x / tw;\n            this.y3 = (frame.y + frame.height) / th;\n        }\n\n        this.uvsUint32[0] = ((Math.round(this.y0 * 65535) & 0xFFFF) << 16) | (Math.round(this.x0 * 65535) & 0xFFFF);\n        this.uvsUint32[1] = ((Math.round(this.y1 * 65535) & 0xFFFF) << 16) | (Math.round(this.x1 * 65535) & 0xFFFF);\n        this.uvsUint32[2] = ((Math.round(this.y2 * 65535) & 0xFFFF) << 16) | (Math.round(this.x2 * 65535) & 0xFFFF);\n        this.uvsUint32[3] = ((Math.round(this.y3 * 65535) & 0xFFFF) << 16) | (Math.round(this.x3 * 65535) & 0xFFFF);\n    }\n}\n"]}